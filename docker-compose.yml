version: '2'
services:

  # portainer:
  #   container_name: portainer
  #   image: portainer/portainer-ce:sts
  #   restart: unless-stopped
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/iotstack/portainer/data:/data
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.portainer.rule=Host(`portainer.feignman.duckdns.org`)"
  #     - "traefik.http.routers.portainer.entrypoints=websecure"

  # traefik:
  #   image: traefik:2.11
  #   container_name: traefik
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   environment:
  #     - TZ=Europe/Paris
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./services/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
  #     - ./services/traefik/rules.toml:/etc/traefik/rules.toml:ro
  #     - /var/lib/iotstack/letsencrypt/acme.json:/acme.json
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.traefik.service=api@internal
  #     - traefik.http.routers.traefik.entrypoints=websecure
  #     - traefik.http.routers.traefik.rule=Host(`traefik.feignman.duckdns.org`)
  #   restart: unless-stopped

  # deluge:
  #   image: linuxserver/deluge
  #   container_name: deluge
  #   network_mode: host
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     #- UMASK_SET=022 #optional
  #     #- DELUGE_LOGLEVEL=error #optional
  #   volumes:
  #     - /var/lib/iotstack/deluge/config:/config
  #     - /mnt/externalraid/Downloads:/downloads
  #   restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      #- RUN_OPTS=run options here #optional
    volumes:
      - /var/lib/iotstack/jackett:/config
      - /mnt/externalraid/Downloads/.torrents:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.feignman.duckdns.org`)"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.middlewares=auth@file"
    ports:
      - 9117:9117
    restart: unless-stopped

  # radarr:
  #   image: linuxserver/radarr:5.10.4
  #   container_name: radarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - UMASK_SET=000 #optional
  #   volumes:
  #     - /var/lib/iotstack/radarr/config:/config
  #     - /mnt/externalraid/Movies:/movies
  #     - /mnt/externalraid/Downloads:/downloads
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.radarr.rule=Host(`radarr.feignman.duckdns.org`)"
  #     - "traefik.http.routers.radarr.entrypoints=websecure"
  #     - "traefik.http.routers.radarr.middlewares=auth@file"
  #   ports:
  #     - 7878:7878
  #   restart: unless-stopped

  # sonarr:
  #   image: linuxserver/sonarr:4.0.9
  #   container_name: sonarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - UMASK_SET=022 #optional
  #   volumes:
  #     - /var/lib/iotstack/sonarr/config:/config
  #     - /mnt/externalraid/Series:/series
  #     - /mnt/externalraid/Downloads:/downloads
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.sonarr.rule=Host(`sonarr.feignman.duckdns.org`)"
  #     - "traefik.http.routers.sonarr.entrypoints=websecure"
  #     - "traefik.http.routers.sonarr.middlewares=auth@file"
  #   ports:
  #     - 8989:8989
  #   restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr:2.5.3
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022 #optional
    volumes:
      - /var/lib/iotstack/lidarr/config:/config
      - /mnt/externalraid/Music:/music
      - /mnt/externalraid/Downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.feignman.duckdns.org`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.middlewares=auth@file"
    ports:
      - 8686:8686
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /var/lib/iotstack/prowlarr/config:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.feignman.duckdns.org`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.middlewares=auth@file"

  # nzbget:
  #   image: ghcr.io/linuxserver/nzbget:21.1.20220414
  #   container_name: nzbget
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - UMASK_SET=022 #optional
  #   volumes:
  #     - /var/lib/iotstack/nzbget/config:/config
  #     - /mnt/externalraid/Downloads:/downloads
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nzbget.rule=Host(`nzbget.feignman.duckdns.org`)"
  #     - "traefik.http.routers.nzbget.entrypoints=websecure"
  #     # - "traefik.http.routers.nzbget.middlewares=auth@file"
  #  ports:
  #    - 6789:6789
  #  restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:2.7
    restart: unless-stopped
    ports:
      - 8086:8086
    volumes:
      - /var/lib/iotstack/influxdb/data:/var/lib/influxdb
      - /var/lib/iotstack/influxdb2/data:/var/lib/influxdb2

  grafana:
    container_name: grafana
    image: grafana/grafana:11.2.2
    restart: unless-stopped
    user: "0"
    ports:
      - 3000:3000
    env_file:
      - ./services/grafana/grafana.env
    volumes:
      - /var/lib/iotstack/grafana/data:/var/lib/grafana
      - /var/lib/iotstack/grafana/log:/var/log/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.feignman.duckdns.org`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"

  telegraf:
     container_name: telegraf
     image: telegraf:1.35
     restart: unless-stopped
     # Added for latest telegraf: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
     user: telegraf:133
     privileged: true
     environment:
       HOST_PROC: /rootfs/proc
       HOST_SYS: /rootfs/sys
       HOST_ETC: /rootfs/etc
     volumes:
       - ./services/telegraf/zimaboard.conf:/etc/telegraf/telegraf.conf:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - /sys:/rootfs/sys:ro
       - /proc:/rootfs/proc:ro
       - /etc:/rootfs/etc:ro

  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    env_file:
      - ./secrets/mariadb.env
    volumes:
      - /var/lib/iotstack/mariadb/config:/config
    ports:
      - 3306:3306
    restart: unless-stopped

  plex:
    image: linuxserver/plex:1.41.6
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - SYSCALL_MAX_ENABLED=1
      #- UMASK_SET=022 #optional
    volumes:
      - /mnt/externalraid:/data
      - /var/lib/iotstack/plex/config:/config
      - /var/lib/iotstack/plex/transcode:/transcode
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  nextcloud:
    image: nextcloud:29.0.7-apache
    container_name: nextcloud
    ports:
      - 9321:80
    volumes:
      - /var/lib/iotstack/nextcloud/html:/var/www/html
      - /mnt/datassd:/var/www/html/data
    restart: unless-stopped
    environment:
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES="172.18.0.0/16 192.168.1.0/24"
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=mariadb
      # - NEXTCLOUD_UPDATE=1
    env_file:
      - ./secrets/nextcloud.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.feignman.duckdns.org`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
    depends_on:
      - mariadb
    links:
      - mariadb

  # vaultwarden:
  #   image: vaultwarden/server:1.32.1-alpine
  #   container_name: vaultwarden
  #   volumes:
  #     - /var/lib/iotstack/vaultwarden:/data/
  #   ports:
  #     - 8090:80
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.feignman.duckdns.org`)"
  #     - "traefik.http.routers.vaultwarden.entrypoints=websecure"

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - TZ=Europe/Paris
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
      - nodeName=Zimaboard
    volumes:
      - /var/lib/iotstack/tdarr/server:/app/server
      - /var/lib/iotstack/tdarr/configs:/app/configs
      - /var/lib/iotstack/tdarr/logs:/app/logs
      - /mnt/externalraid:/media
      - /var/lib/iotstack/tdarr/cache:/temp

    devices:
      - /dev/dri:/dev/dri

